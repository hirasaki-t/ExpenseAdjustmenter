// <auto-generated />
using System;
using DbMigration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbMigration.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    [Migration("20230405083036_AddAllSeed")]
    partial class AddAllSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DbMigration.Tables.ApproveHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ApproveHistories");
                });

            modelBuilder.Entity("DbMigration.Tables.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReceipt")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "01GX88M2879M9HEKGH3EE053MR",
                            IsActive = true,
                            IsReceipt = false,
                            Name = "電車"
                        },
                        new
                        {
                            Id = "01GX88M287PPF5F742159C5CHF",
                            IsActive = true,
                            IsReceipt = false,
                            Name = "バス"
                        },
                        new
                        {
                            Id = "01GX88M287HK8RFXWV7VXTFE52",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "タクシー"
                        },
                        new
                        {
                            Id = "01GX88M2873P25GHVDB668NPDM",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "その他"
                        },
                        new
                        {
                            Id = "01GX88M2875M6211CENX4TJRF0",
                            IsActive = true,
                            IsReceipt = false,
                            Name = "高速代"
                        },
                        new
                        {
                            Id = "01GX88M28759SXJ1KCZRKE0ADY",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "宿泊費"
                        });
                });

            modelBuilder.Entity("DbMigration.Tables.Expense", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("SubmissionMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("DbMigration.Tables.ExpenseType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReceipt")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = "01GX88M287XD1V10SW0VN2XH76",
                            Details = "1人当たりの金額が「5,000円（税込）」以下",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "会議費"
                        },
                        new
                        {
                            Id = "01GX88M2873NJPHJG9HMX18VPC",
                            Details = "1人当たりの金額が「5,001円（税込）」以上",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "接待費"
                        },
                        new
                        {
                            Id = "01GX88M2872W49DXADT8GEBZVQ",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "通信費"
                        },
                        new
                        {
                            Id = "01GX88M28715JQK7J4BCFF59NC",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "事務用品購入費"
                        },
                        new
                        {
                            Id = "01GX88M28750KQ20F94Q3T1FHF",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "書籍購入費"
                        },
                        new
                        {
                            Id = "01GX88M2875M6P066TQXF4H4DV",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "ハードウェア購入費"
                        },
                        new
                        {
                            Id = "01GX88M287EH1GG5H8G34ST27N",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "ソフトウェア購入費"
                        },
                        new
                        {
                            Id = "01GX88M287G41P1XYT79EWJX6E",
                            IsActive = true,
                            IsReceipt = true,
                            Name = "福利厚生"
                        },
                        new
                        {
                            Id = "01GX88M287REBZG5QRCVHKGFE1",
                            Details = "消耗品など",
                            IsActive = true,
                            IsReceipt = false,
                            Name = "雑貨"
                        });
                });

            modelBuilder.Entity("DbMigration.Tables.SundryInformation", b =>
                {
                    b.Property<string>("ExpenseId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.Property<int>("ParticipationNumber")
                        .HasColumnType("int");

                    b.HasKey("ExpenseId");

                    b.HasIndex("ExpenseTypeId");

                    b.ToTable("SundryInformations");
                });

            modelBuilder.Entity("DbMigration.Tables.TraveringInformation", b =>
                {
                    b.Property<string>("ExpenseId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("EndSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TraveringInformations");
                });

            modelBuilder.Entity("DbMigration.Tables.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DbMigration.Tables.ApproveHistory", b =>
                {
                    b.HasOne("DbMigration.Tables.Expense", null)
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbMigration.Tables.Expense", b =>
                {
                    b.HasOne("DbMigration.Tables.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbMigration.Tables.SundryInformation", b =>
                {
                    b.HasOne("DbMigration.Tables.Expense", null)
                        .WithOne()
                        .HasForeignKey("DbMigration.Tables.SundryInformation", "ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigration.Tables.ExpenseType", null)
                        .WithMany()
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbMigration.Tables.TraveringInformation", b =>
                {
                    b.HasOne("DbMigration.Tables.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigration.Tables.Expense", null)
                        .WithOne()
                        .HasForeignKey("DbMigration.Tables.TraveringInformation", "ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
